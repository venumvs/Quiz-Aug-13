const express = require('express')
const mongoose  = require('mongoose')
const cors = require('cors')
const bodyParser = require('body-parser')
const app = express()
const PORT = 5000;

//middlewares
app.use(cors())
app.use(bodyParser.json())

mongoose.connect('mongodb://localhost:27017/demo2',{
    useNewUrlParser:true, //used to create connection
    useUnifiedTopology:true
})

const questionSchema = new mongoose.Schema({    // creates a schema or a structure 
    question : String,
    options : [String],
    answer : String,
    category : String  
})

const Question = mongoose.model('question',questionSchema) //creates a model - can use model to insert values into the db

/*app.post('/add-question',async (req,res) => {
    const{question,options,answer,category} = req.body;
    const newQuestion =await Question.create({
        question:question,
        options:[],
        answer:answer,
        category:category 
    })
    for(let opt in options){
        newQuestion.options.push(opt);
    }
    await newQuestion.save() //save method means that data will be stored in the database
    res.send('Question added')
    
})*/
app.post('/add-question', async (req, res) => {
    const { question, options, answer, category } = req.body;
    const newQuestion = new Question({ question, options, answer, category });
    await newQuestion.save();
    res.send('Question added!');
  });
 
app.get('/questions/:category', async (req, res) => {
    const { category } = req.params;
    const questions = await Question.find({ category });
    res.json(questions);
});



app.listen(PORT, () => {
    console.log("hi")
})